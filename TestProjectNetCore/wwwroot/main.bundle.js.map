{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/component/app/app.component.html","./src/app/component/app/app.component.ts","./src/app/component/customers/customers.component.html","./src/app/component/customers/customers.component.ts","./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;ACL+E;AAE/E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAC;IACxD,EAAE,IAAI,EAAE,WAAW,EAAC,SAAS,EAAE,oGAAkB,EAAE;CAEpD,CAAC;AACF;IAAA;IAIgC,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFjC;AAAA;IAAA;IAWyB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GCzByC,qFACnE,koBAAe,yFACf,MAAgB,uFAEhB,2BAHA,YAAe;;;;;;;;;;;;ACCf;AAAA;IAAA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mHCGC,kIAAuC,8FACrC,uIAAI,2FAAe,MAAK,yFACxB,uIAAI,2FAAyB,MAAK,yFAClC,uIAAI,2FAA4B,MAAK,yFACrC,wIAAI,4FAA2B,MAAK,uFACtC,iCAJM,gEAAe,GACf,0EAAyB,GACzB,6EAA4B,GAC5B,6EAA2B;mHAhBnC,gIAAG,8GAEH,MAAI,uFAEJ,2IAAQ,4FACN,kRAAI,8FACF,uIAAI,0FAAE,MAAK,yFACX,wIAAI,4FAAI,MAAK,yFACb,wIAAI,8FAAM,MAAK,yFACf,wIAAI,8FAAM,MAAK,yFAEjB,MAAK,uFACL,qhBAAuC,IAKlC,yFAEP,MAAQ,qFACR,mDARM,mBAAkC,YAAtC,aAAuC,EAAnC,SAAkC;;;;;;;;;;;;;;ACX0B;AAGlE;IASE,4BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAEzD,qCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YACnD,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEL,CAAC;IAEH,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrBoC;AAGJ;AACF;AAC/B;IAGE,yBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,sCAAY,GAAZ;QACE,IAAI,SAAS,GAAE,sCAAsC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,aAAG;YACrC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACzB,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IAEL,CAAC;IAEH,sBAAC;AAAD,CAAC;;;;;;;;;;ACpBD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAIU;;;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,oFAAwB,uBAAgB,uFAAW;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomersComponent } from './component/customers/customers.component';\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/customers', pathMatch: 'full'},\r\n  { path: 'customers',component: CustomersComponent },\r\n\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\n\n\nimport { AppComponent } from '../app/component/app/app.component';\nimport { CustomersComponent } from './component/customers/customers.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { CustomerService } from './services/customer.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpModule, AppRoutingModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","<!--The content below is only a placeholder and can be replaced.-->\r\n<router-outlet>\r\n</router-outlet>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/app/app.component.html","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/app/app.component.ts","<p>\n  customers works!\n</p>\n\n<table >\r\n  <tr>\r\n    <th>id</th>\r\n    <th>name</th>\r\n    <th>addess</th>\r\n    <th>number</th>\r\n\r\n  </tr>\r\n  <tr *ngFor=\"let customer of customers\">\r\n    <td>{{customer.id}}</td>\r\n    <td>{{customer.customerName}}</td>\r\n    <td>{{customer.customerAddress}}</td>\r\n    <td>{{customer.customerNumber}}</td>\r\n  </tr>\r\n  \r\n</table>\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/customers/customers.component.html","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../../services/customer.service';\nimport { Customer } from \"../../models/customer.model\";\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers: Customer[];\n\n  constructor(private customerService: CustomerService) { }\n\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe((result) => {\r\n      this.customers = result;\r\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/customers/customers.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\r\nimport { Customer } from \"../models/customer.model\";\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\n@Injectable()\nexport class CustomerService {\n\n  constructor(private http: Http) { }\n\n  getCustomers(): Observable<Customer[]> {\r\n    let statusUrl= \"http://localhost:55500/api/Customers\";\r\n    return this.http.get(statusUrl).map(res => {\r\n      let stsRslt = res.json();\r\n      return stsRslt || {};\r\n    });\r\n\r\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/customer.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}